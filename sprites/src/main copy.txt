

#include "pch.h"
#include <raylib.h>
#include <Config.hpp>
#include <Core.hpp>
#include <Utils.hpp>


const int screenWidth = 1024;
const int screenHeight = 720;



float gravity = 0.5;
int maxX = 0;
int maxY = 0;
int minX = 0;
int minY = 0;


struct Bunny : public Action    
{
    void update(float delta) override
    {
        life -= 1;

        if (life <= 0)
        {
            die = true;
          //  return;
        }
        x += speedX;
        y += speedY;
        speedY += gravity;

        if (x > maxX)
        {
            speedX *= -1;
            x = maxX;
        }
        else if (x < minX)
        {
            speedX *= -1;
            x = minX;
        }

        if (y > maxY)
        {
            speedY *= -0.8;
            y = maxY;

            if (range() > 0.5)
                speedY -= 3 + range() * 4;
        }
        else if (y < minY)
        {
            speedY = 0;
            y = minY;
        }

         transform->position.set(x, y);
    }
    void load() override
    {
        sprite    = entity->get_component<Sprite>();
        transform = entity->get_component<Transform2D>();

        x = GetMouseX();
        y = GetMouseY();
        speedX = range() * 8;
        speedY = range() * 5 - 2.5;
        sprite->color.r = range() * 255;
        sprite->color.g = range() * 255;
        sprite->color.b = range() * 255;
        sprite->color.a = 255;
        life = 1000;
        die = false;
        transform->position.set(x, y);

    }

    double speedX;
    double speedY;
    double x;
    double y;
    double life;
    bool die;
    int depth;
    Transform2D *transform;
    Sprite *sprite;
};



int main()
{

    InitWindow(screenWidth, screenHeight, "BuEngine");
    SetTargetFPS(60);

    Assets::as().load_graph("assets/wabbit_alpha.png", 0);

    EntityManager manager;



    maxX = screenWidth -40;
    maxY = screenHeight - 40;
    minX= 40;
    minY = 40;


    Entity *entity = manager.create();
    Transform2D *transform  =  entity->add_component<Transform2D>();
    Sprite *sprite          =  entity->add_component<Sprite>(0);
    entity->add_component<Script>(new Bunny);

    

    while (!WindowShouldClose())
    {

 

        

        if (IsMouseButtonDown(MOUSE_LEFT_BUTTON))
        {
            for (int i = 0; i < 500; i++)
            {
                Entity *entity = manager.create();
                transform = entity->add_component<Transform2D>();
                sprite = entity->add_component<Sprite>(0);
                entity->add_component<Script>(new Bunny);
            }

        }




        BeginDrawing();

        ClearBackground(BLACK);

        manager.update(GetFrameTime());

      

        DrawFPS(10, 10);
        DrawText(TextFormat("Count: %d", manager.count()), 10, 40, 20, WHITE);

        EndDrawing();

       
    }
    

    manager.clear();

    Assets::as().clear();



    CloseWindow();

    return 0;
}
